# -*- coding: utf-8 -*-
"""
Задание 5.2

Запросить у пользователя ввод IP-сети в формате: 10.1.1.0/24

Затем вывести информацию о сети и маске в таком формате:

Network:
10        1         1         0
00001010  00000001  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях сеть/маска.

Вывод сети и маски должен быть упорядочен также, как в примере:
- столбцами
- ширина столбца 10 символов (в двоичном формате
  надо добавить два пробела между столбцами
  для разделения октетов между собой)

Подсказка: Получить маску в двоичном формате можно так:
In [1]: "1" * 28 + "0" * 4
Out[1]: '11111111111111111111111111110000'


Ограничение: Все задания надо выполнять используя только пройденные темы.
"""
from ipaddress import ip_address


device_id = input ("Введите IP устройства: ")
ip_address = str(device_id[:-3].split(".")) ##выделение адреса из введенной строки 
ip_address = (ip_address.replace("[","").replace("]","").replace("'","").replace(",","")).split() ##вычищение адреса от мусора
ip = '''
 IP Address:
 {0:<8} {1:<8} {2:<8} {3:<8}
 {0:08b} {1:08b} {2:08b} {3:08b}
''' ## переменная для вывода в соответствующем форматировании
mask = device_id[-2:] ##получение маски
mask_bin = '1' * int((mask),10) + ('0'* (32-int((mask),10))) ## приведение маски двоичный вид. нужно посмотреть сюда на 10 у инта
mask_out = '''
 Mask:
 /{0}
 {1:<8} {2:<8} {3:<8} {4:<8}
 {5:<8} {6:<8} {7:<8} {8:<8}
''' ## переменная для вывода в соответствующем форматировании

## вывод адреса:
print(ip.format(int((ip_address[0]),10), int((ip_address[1]),10), int((ip_address[2]),10), int((ip_address[3]),10)))
## вывод маски:
print(mask_out.format(mask, int((mask_bin[0:8]),2), int((mask_bin[8:16]),2), int((mask_bin[16:24]),2), int((mask_bin[24:32]),2), mask_bin[0:8], mask_bin[8:16], mask_bin[16:24], mask_bin[24:32]))

